# EXTERNAL LIB
GSL = /u/shared/programs/x86_64/gsl/2.2/gnu/4.9.2
FFTW = /u/shared/programs/x86_64/fftw/3.3.4/gnu/4.9.2
CFITSIO = /home/jiwang/package/cfitsio
HEALPIX = /home/jiwang/package/Healpix_3.30
HEALPIX_TARGET = generic_gcc

# EXECUTABLE NAME
EXE = hamx

# COMPILER
CXX = g++ -std=c++11

# DEBUG FLAGS
DEBUG = -g #-NDEBUG

# COMPILE OPTIONS
CXXFLAGS = -m64 -O2 -Wall -fPIC -Wno-deprecated -pthread $(DEBUG) -fopenmp

EXT_INC = -I$(CFITSIO)/include -I$(GSL)/include -I$(FFTW)/include \
	-I$(HEALPIX)/src/cxx/$(HEALPIX_TARGET)/include \
	-I include -I.
CXXFLAGS += $(EXT_INC)
 
ALL_L = -L$(CFITSIO)/lib -L$(GSL)/lib -L$(FFTW)/lib \
	-L$(HEALPIX)/src/cxx/$(HEALPIX_TARGET)/lib \
	-L lib -L. 
LFLAGS = $(ALL_L) \
	-lhammurabi \
	-lhealpix_cxx -lcxxsupport -lc_utils -lfftpack -lcfitsio \
	-lgsl -lgslcblas -lm -lfftw3 -fopenmp

# DEPENDENCIES
OBJ = $(addprefix src/, tinyxml2.o class_grid.o class_pond.o namespace_toolkit.o class_fe.o class_fernd.o class_breg.o class_brnd.o class_cre.o class_int.o)

HEADS = $(addprefix include/, cgs_units_file.h class*.h namespace_toolkit.h tinyxml2.h) 



# RULES

default: $(EXE)

src/hammurabi.o: src/hammurabi.cc $(OBJ)

$(EXE): $(OBJ) src/hammurabi.o lib/libhammurabi.a
	mkdir bin
	$(CXX) $^ -o bin/$(EXE) $(LFLAGS)
	cp data/* bin; cp python_utils/* bin

%.o: %.cc $(HEADS)
	$(CXX) -c $< -o $@ $(CXXFLAGS)

lib/libhammurabi.a: $(OBJ) src/hammurabi.o
	ar cr $@ $^

help:
	echo $(OBJ)

.PHONY: clean
clean:
	rm lib/*.a src/*.o; rm -rf bin
.PHONY: tar 
tar:
	tar cfv HamX.tar.gz makefile* include src
# END
